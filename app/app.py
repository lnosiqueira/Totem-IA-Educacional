# app/app.py
import io
from pathlib import Path

import pandas as pd
import streamlit as st

# ---------------------------
# Configura√ß√£o geral da p√°gina
# ---------------------------
st.set_page_config(page_title="Totem IA ‚Äì Educacional", layout="wide")

# ---------------------------
# Estado de sess√£o
# ---------------------------
if "interacoes" not in st.session_state:
    st.session_state.interacoes = []  # lista de dicts: {"pergunta": ..., "resposta": ...}

# ---------------------------
# Banner (opcional)
# ---------------------------
banner_path = Path("../assets/banner-totem-ia.png")
if banner_path.exists():
    st.markdown(
        f"""
        <div style="text-align:center">
          <img src="{banner_path.as_posix()}" style="max-width:100%; border-radius:12px;" />
        </div>
        """,
        unsafe_allow_html=True,
    )

# ---------------------------
# Cabe√ßalho
# ---------------------------
st.title("Totem IA ‚Äì Prot√≥tipo (Sprint 1)")
st.caption("FIAP + FlexMidia ‚Ä¢ Educa√ß√£o inteligente em escolas p√∫blicas e privadas")

# ---------------------------
# Sidebar / Navega√ß√£o
# ---------------------------
st.sidebar.header("Menu")
page = st.sidebar.radio(
    "Navega√ß√£o",
    ["In√≠cio", "Intera√ß√µes (demo)", "Relat√≥rios (simulado)", "Sobre"],
)

# ---------------------------
# P√°gina: In√≠cio
# ---------------------------
if page == "In√≠cio":
    st.subheader("Objetivo do Totem IA")
    st.write(
        "- Intera√ß√£o por **voz/texto** com IA em um totem f√≠sico.\n"
        "- Coleta de dados **anonimizados** para apoiar decis√µes pedag√≥gicas.\n"
        "- Integra√ß√£o com **sensores (presen√ßa/ultrassom, ESP32-CAM)** e nuvem."
    )
    st.info("Vers√£o demo: interface e dados simulados para validar UX e arquitetura.")

# ---------------------------
# P√°gina: Intera√ß√µes (demo)
# ---------------------------
elif page == "Intera√ß√µes (demo)":
    st.subheader("Fa√ßa uma pergunta ao Totem (demo)")

    pergunta = st.text_input("Ex.: 'Qual √© o hor√°rio da biblioteca?'")
    if st.button("Enviar"):
        resp = (
            "Resposta (demo): em breve este m√≥dulo usar√° um modelo de IA com base educacional."
        )
        st.success(resp)
        st.session_state.interacoes.append(
            {"pergunta": pergunta or "", "resposta": resp}
        )

    st.divider()
    st.write("üìà M√©tricas r√°pidas (simuladas)")

    c1, c2, c3 = st.columns(3)
    c1.metric(
        "Intera√ß√µes nesta sess√£o",
        len(st.session_state.interacoes),
        "+1" if st.session_state.interacoes else "0",
    )
    c2.metric("Tempo m√©dio (s)", "18", "-2")
    c3.metric("Satisfa√ß√£o (NPS)", "76", "+3")

    # Persist√™ncia simples em CSV (na pasta ../data)
    data_dir = Path("../data")
    data_dir.mkdir(parents=True, exist_ok=True)
    csv_path = data_dir / "interacoes.csv"

    if st.session_state.interacoes:
        df_save = pd.DataFrame(st.session_state.interacoes)
        df_save.to_csv(csv_path, index=False, encoding="utf-8")
        st.caption(f"üíæ Intera√ß√µes salvas em: {csv_path.as_posix()}")

        # Download direto do CSV
        buff = io.StringIO()
        df_save.to_csv(buff, index=False, encoding="utf-8")
        st.download_button(
            label="‚¨áÔ∏è Baixar CSV das intera√ß√µes desta sess√£o",
            data=buff.getvalue(),
            file_name="interacoes_sessao.csv",
            mime="text/csv",
        )

# ---------------------------
# P√°gina: Relat√≥rios (simulado)
# ---------------------------
elif page == "Relat√≥rios (simulado)":
    st.subheader("Fluxo de visita√ß√£o / Intera√ß√µes")

    csv_path = Path("../data/interacoes.csv")
    if csv_path.exists():
        st.success("Dados carregados de intera√ß√µes salvas (CSV).")
        df = pd.read_csv(csv_path)
        st.dataframe(df, use_container_width=True)

        # Gr√°fico simples: contagem cumulativa de intera√ß√µes
        st.line_chart(
            pd.DataFrame({"qtd_interacoes": [i + 1 for i in range(len(df))]})
        )
    else:
        st.warning("Ainda n√£o h√° CSV de intera√ß√µes. Exibindo dados simulados.")
        df = pd.DataFrame(
            {
                "hora": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17],
                "interacoes": [2, 4, 8, 12, 15, 10, 9, 7, 6, 5, 3],
            }
        )
        st.line_chart(df.set_index("hora"))

# ---------------------------
# P√°gina: Sobre
# ---------------------------
elif page == "Sobre":
    st.write("**Totem IA ‚Äì Educacional** ‚Ä¢ FIAP + FlexMidia")
    st.write("- Prot√≥tipo em **Streamlit (Python)**")
    st.write("- Pr√≥ximos passos: sensores/ESP32-CAM, APIs em nuvem e dashboards reais.")
